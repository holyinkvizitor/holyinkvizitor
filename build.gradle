plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url 'https://jitpack.io' }
	maven { url 'https://libs.azuredoom.com:4443/mods' }
	maven { url 'https://maven.terraformersmc.com/' }
	maven {
		name = 'Modrinth'
		url = 'https://api.modrinth.com/maven'
		content {
			includeGroup 'maven.modrinth'
		}
	}
	maven {
		name = "Ladysnake Libs"
		url = 'https://maven.ladysnake.org/releases'
	}
}

loom {
    splitEnvironmentSourceSets()

	mods {
		"modid" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation(files("levelZ/build/devlibs/levelz-1.4.13-dev.jar"))
	//implementation project(':levelZ')
	modImplementation(files("wizards/build/devlibs/wizards-1.2.1+1.20.1-dev.jar"))
	modImplementation(files("archer/build/devlibs/archers-1.2.2+1.20.1-dev.jar"))
	modImplementation(files("paladin/build/devlibs/paladins-1.2.1+1.20.1-dev.jar"))

	modImplementation fileTree(dir: 'libs', include: ['*.jar'])
	modImplementation("com.github.ZsoltMolnarrr:TinyConfig:${project.tiny_config_version}")

	modImplementation("maven.modrinth:structure-pool-api:${project.structure_pool_api_version}")
	modImplementation("dev.emi:trinkets:${project.trinkets_version}")
	modImplementation("mod.azure.azurelibarmor:azurelibarmor-fabric-${project.azure_mc_version}:${project.azure_lib_version}")

	modImplementation("maven.modrinth:spell-engine:${project.spell_engine_version}-fabric")
	modImplementation("maven.modrinth:spell-power:${project.spell_power_version}-fabric")
	modImplementation("maven.modrinth:runes:${project.runes_version}-fabric")

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 19
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_19
	targetCompatibility = JavaVersion.VERSION_19
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}